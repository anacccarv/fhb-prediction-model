axis.title.y = element_text(size = 14),
legend.position = "bottom") + # coloca a legenda dentro do gráfico (coordenadas normalizadas) )
guides(color = guide_legend(nrow = 1), shape = "none") +# oculta legenda do Type
scale_size_continuous(
limits = c(0.79, 0.835),
range = c(2, 8),         # controla o tamanho mínimo e máximo dos pontos
breaks = c(0.80, 0.81, 0.82, 0.83), # define quais valores vão aparecer na legenda
labels = scales::number_format(accuracy = 0.01) # formata os números na legenda
)
c <- ggplot(eval_df, aes(x = ROC_AUC, y = PR_AUC, color = Model, shape = Type)) +
geom_point(alpha = 0.8, size = 6) +
scale_shape_manual(values = c(Base = 16, Ensemble = 17)) +
ggthemes::scale_color_excel_new() +
labs(x = "ROC_AUC", y = "PR_AUC") +
theme_bw() +
xlim(0.775, 0.85) +
ylim(0.715, 0.80) +
theme(plot.title = element_text(size = 16, hjust = 0.5),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.position = "bottom") + # coloca a legenda dentro do gráfico (coordenadas normalizadas) )
guides(color = guide_legend(nrow = 1),  shape = "none") +# oculta legenda do Type
scale_size_continuous(
limits = c(0.79, 0.835),
range = c(2, 8),         # controla o tamanho mínimo e máximo dos pontos
breaks = c(0.80, 0.81, 0.82, 0.83), # define quais valores vão aparecer na legenda
labels = scales::number_format(accuracy = 0.01) # formata os números na legenda
)
#a + b + c + guide_area() +
#  plot_layout(guides = 'collect')
(a/b/c) +
plot_layout(guides = "collect") &
plot_annotation(tag_levels = "A")&
theme(legend.position = "bottom")
res <- read.csv("plan/res.csv")
pA <- ggplot(res, aes(pt, NMB_mean)) +
geom_ribbon(aes(ymin = NMB_lo, ymax = NMB_hi), alpha = 0.15, fill = "#4970b5") +
geom_line(size = 1.5, color = "#ED7D31") +
geom_hline(yintercept = 0, linetype = 2, color = "gray60") +
labs(x = expression("Risk threshold (" * italic(p)[italic(t)] * ")"),
y = expression("Mean NMB (USD/ha per decision unit)")) +
theme_bw()+
theme(
axis.title.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
)+
scale_y_continuous(breaks = breaks_width(10.0))
pB <- ggplot(res, aes(pt, Pr_trat_pos)) +
annotate("rect", ymin = 0.5, ymax = 0.8, xmin = -Inf, xmax = Inf,
fill = "#4970b5", alpha = 0.2)+
geom_line(size = 1.5, , color = "#ED7D31") +
geom_hline(yintercept = 0.5, linetype = 2, color = "gray60") +
geom_hline(yintercept = 0.8, linetype = 2, color = "gray60") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(0,1)) +
labs(x = expression("Risk threshold (" * italic(p)[italic(t)] * ")"),
y = "Probability of NMB > 0") +
theme_bw()+
theme(
axis.title.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
)
pD1 <- ggplot(res, aes(pt, NMB_trat_mean)) +
geom_ribbon(aes(ymin = NMB_trat_lo, ymax = NMB_trat_hi), alpha = 0.15, fill = "#4970b5") +
geom_line(size = 1.5, color = "#ED7D31") +
geom_hline(yintercept = 0, linetype = 2, color = "gray60") +
labs(x = expression("Risk threshold (" * italic(p)[italic(t)] * ")"),
y = "NMB per treated unit (USD/ha)") +
theme_bw()+
theme(
axis.title.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
)
pD2 <- ggplot(res, aes(pt, PPV)) +
geom_ribbon(aes(ymin = PPV_req_lo, ymax = PPV_req_hi), alpha = 0.15, fill = "#4970b5") +
geom_line(size = 1.5, color = "#ED7D31") +
geom_line(aes(y = PPV_req_med), linetype = 2, color = "gray60") +
scale_y_continuous(limits = c(0,1), labels = scales::percent) +
labs(x = expression("Risk threshold (" * italic(p)[italic(t)] * ")"),
y = "Observed PPV vs. required PPV (C/B)") +
theme_bw()+
theme(
axis.title.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
)
(pD1 | pB)/
(pA | pD2)+
plot_annotation(tag_levels = "A")
ggsave("imagem_NMB.png", dpi = 600, bg = "white", width = 10.5, height = 9)
cross_50 <- res %>%
arrange(pt) %>%
mutate(diff = Pr_trat_pos - 0.5) %>%
filter(diff >= 0) %>%
slice(1)
cross_50_pt <- cross_50$pt
cross_50_pt
cross_50 <- res %>%
arrange(pt) %>%
mutate(diff = Pr_pos - 0.5) %>%
filter(diff >= 0) %>%
slice(1)
cross_50_pt <- cross_50$pt
cross_50_pt
# Pega os pontos imediatamente abaixo e acima de zero
below <- res %>% filter(NMB_trat_mean < 0) %>% slice_tail(n = 1)
above <- res %>% filter(NMB_trat_mean >= 0) %>% slice_head(n = 1)
# Interpolação linear para estimar pt exato
pt_zero <- below$pt + (0 - below$NMB_trat_mean) / (above$NMB_trat_mean - below$NMB_trat_mean) * (above$pt - below$pt)
pt_zero
# Pega os dois pontos ao redor de 0.5
below <- res %>% filter(Pr_trat_pos < 0.8) %>% slice_tail(n = 1)
above <- res %>% filter(Pr_trat_pos >= 0.8) %>% slice_head(n = 1)
# Interpolação linear
pt_50 <- below$pt + (0.5 - below$Pr_trat_pos) / (above$Pr_trat_pos - below$Pr_trat_pos) * (above$pt - below$pt)
pt_50
res <- read.csv("plan/res.csv")
pA <- ggplot(res, aes(pt, NMB_mean)) +
geom_ribbon(aes(ymin = NMB_lo, ymax = NMB_hi), alpha = 0.15, fill = "#4970b5") +
geom_line(size = 1.5, color = "#ED7D31") +
geom_hline(yintercept = 0, linetype = 2, color = "gray60") +
labs(x = expression("Risk threshold (" * italic(p)[italic(t)] * ")"),
y = expression("Mean NMB (USD/ha per decision unit)")) +
theme_bw()+
theme(
axis.title.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
)+
scale_y_continuous(breaks = breaks_width(10.0))
pB <- ggplot(res, aes(pt, Pr_pos)) +
annotate("rect", ymin = 0.5, ymax = 0.8, xmin = -Inf, xmax = Inf,
fill = "#4970b5", alpha = 0.2)+
geom_line(size = 1.5, , color = "#ED7D31") +
geom_hline(yintercept = 0.5, linetype = 2, color = "gray60") +
geom_hline(yintercept = 0.8, linetype = 2, color = "gray60") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(0,1)) +
labs(x = expression("Risk threshold (" * italic(p)[italic(t)] * ")"),
y = "Probability of NMB > 0") +
theme_bw()+
theme(
axis.title.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
)
pD1 <- ggplot(res, aes(pt, NMB_trat_mean)) +
geom_ribbon(aes(ymin = NMB_trat_lo, ymax = NMB_trat_hi), alpha = 0.15, fill = "#4970b5") +
geom_line(size = 1.5, color = "#ED7D31") +
geom_hline(yintercept = 0, linetype = 2, color = "gray60") +
labs(x = expression("Risk threshold (" * italic(p)[italic(t)] * ")"),
y = "NMB per treated unit (USD/ha)") +
theme_bw()+
theme(
axis.title.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
)
pD2 <- ggplot(res, aes(pt, PPV)) +
geom_ribbon(aes(ymin = PPV_req_lo, ymax = PPV_req_hi), alpha = 0.15, fill = "#4970b5") +
geom_line(size = 1.5, color = "#ED7D31") +
geom_line(aes(y = PPV_req_med), linetype = 2, color = "gray60") +
scale_y_continuous(limits = c(0,1), labels = scales::percent) +
labs(x = expression("Risk threshold (" * italic(p)[italic(t)] * ")"),
y = "Observed PPV vs. required PPV (C/B)") +
theme_bw()+
theme(
axis.title.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
)
(pD1 | pB)/
(pA | pD2)+
plot_annotation(tag_levels = "A")
#ggsave("imagem_NMB.png", dpi = 600, bg = "white", width = 10.5, height = 9)
p_hat <-  predict(meta_model, type = "response")
p_hat <-  predict(meta_model, type = "response")
y  <- df_predictors$epidemic
sev_epid <- data %>%
group_by(study) %>%
summarise(index = mean(index)) %>%
mutate(index = index/100) %>%
filter(index > 0.1) %>%
pull(index)
# ============================================================
# NMB vs threshold (p_t) — Global model (Duffeck et al. 2020)
# With risk-conditional severity, NMB per treated unit, and PPV vs C/B
# All monetary values in USD/ha (1 BRL = 0.1878 USD)
# ============================================================
# Conversion rate
brl_to_usd <- 0.1878
# Environment prerequisites:
# y (0/1 epidemic), p_hat (predicted probability), length(y)==length(p_hat)
# One of the severity options:
#   A) sev ........ vector aligned with unit (fraction 0–1; NA when no epidemic)
#   B) sev_epid ... vector of severities (fraction 0–1) only from years/locations WITH epidemic
stopifnot(exists("y"), exists("p_hat"), length(y) == length(p_hat))
have_aligned_sev <- exists("sev") && length(sev) == length(y)
suppressPackageStartupMessages({
library(dplyr); library(ggplot2); library(purrr); library(tidyr); library(patchwork)
if (have_aligned_sev) library(mgcv)
})
# ----------------------------
# 1) Problem parameters
# ----------------------------
# Duffeck et al. 2020 (global FHB model; spring wheat/Brazil)
# kg/ha lost per 1 point of FHB index
# --- PARAMETERS (edit here) ---------------------------------
# One attainable yield (kg/ha)
Y0_kg_ha <- 3645.3   # <- set your single attainable yield
# Option A: set d_pct directly (percent loss per index point)
# d_pct <- 1.35        # e.g., 1.35% loss per index point
# Option B: compute d_pct from a kg/ha slope and Y0
slope_kg <- 49.1      # kg/ha lost per 1 index point (Duffeck et al.)
d_pct <- 100 * slope_kg / Y0_kg_ha   # => ~1.347% per point with Y0=3645.3
# Efficacy (as before; conservative)
rE <- function(S) rbeta(S, 45, 65)
# Cost (USD) and price (USD/kg) as before
brl_to_usd <- 0.1878
rC <- function(S) pmax(rnorm(S, mean = 150, sd = 20), 0) * brl_to_usd
P_usd_per_kg <- 1.1 * brl_to_usd
preco_saca_usd <- 60 * P_usd_per_kg
# Threshold grid and PSA size
ths <- seq(0.05, 0.60, by = 0.01)
S   <- 10000
set.seed(123)
# ----------------------------
# 2) Risk-conditional severity  E[s_pts | p]
# ----------------------------
h_bw <- 0.06
if (have_aligned_sev) {
base_idx <- which(y == 1 & is.finite(p_hat) & is.finite(sev))
p_ep  <- p_hat[base_idx]
s_ep  <- sev[base_idx]              # fraction 0–1
draw_s_pts <- function(pt, S){
w <- exp(- (p_ep - pt)^2 / (2*h_bw^2))
if (sum(w) == 0 || all(!is.finite(w))) w <- rep(1, length(p_ep))
w <- pmax(w, 1e-9)
s_frac <- sample(s_ep, size = S, replace = TRUE, prob = w)
100 * s_frac  # return in POINTS
}
} else {
stopifnot(exists("sev_epid"))
s_base <- sev_epid[is.finite(sev_epid)]
s_base <- s_base[s_base >= 0 & s_base <= 1]
k_prec <- 25
q <- seq(0, 1, by = 0.1)
mu_q <- stats::quantile(s_base, probs = q, na.rm = TRUE)
fit_mu <- stats::splinefun(x = q, y = mu_q, method = "monoH.FC")
draw_s_pts <- function(pt, S){
r <- mean(p_hat[y==1] <= pt, na.rm = TRUE)
m  <- min(max(fit_mu(r), 0), 1)
alpha <- max(m * k_prec, 1e-3); beta <- max((1 - m) * k_prec, 1e-3)
100 * rbeta(S, alpha, beta)
}
}
k_prec <- 20
# ----------------------------
# 3) PSA per threshold (population NMB and per treated unit)
# ----------------------------
compute_psa <- function(y, p_hat, ths, slope_kg, P, rE, rC, S = 10000){
N <- length(y)
map_dfr(ths, function(pt){
pred <- p_hat >= pt
TP <- sum(pred & y == 1)
Tt <- sum(pred)
PPV <- if (Tt > 0) TP / Tt else 0
# Sampling
E  <- rE(S)
C  <- rC(S)
s_pts <- draw_s_pts(pt, S)
# Benefit per epidemic (USD/ha): slope_kg * E * s_pts * P
# Benefit per epidemic (USD/ha) using % loss and a single Y0:
B <- (d_pct/100) * E * s_pts * Y0_kg_ha * P
# NMB per decision unit (population) and per treated unit
NMB_pop  <- (TP / N) * B - (Tt / N) * C
NMB_trat <- PPV * B - C
req_PPV  <- pmin(C / pmax(B, 1e-9), 1)
tibble(
pt,
NMB_mean = mean(NMB_pop),
NMB_lo   = unname(quantile(NMB_pop, .025)),
NMB_hi   = unname(quantile(NMB_pop, .975)),
Pr_pos   = mean(NMB_pop > 0),
Pr_ge_1saca = mean(NMB_pop >= preco_saca_usd),
NMB_trat_mean = mean(NMB_trat),
Pr_trat_pos   = mean(NMB_trat > 0),
PPV = PPV,
PPV_req_med = median(req_PPV),
PPV_req_lo  = quantile(req_PPV, .10),
PPV_req_hi  = quantile(req_PPV, .90)
)
})
}
res <- compute_psa(y, p_hat, ths, slope_kg, P_usd_per_kg, rE, rC, S)
# ----------------------------
# 4) Plots
# ----------------------------
pA <- ggplot(res, aes(pt, NMB_mean)) +
geom_ribbon(aes(ymin = NMB_lo, ymax = NMB_hi), alpha = 0.15) +
geom_line(size = 1) +
geom_hline(yintercept = 0, linetype = 2) +
labs(x = "Risk threshold (p_t)", y = "Mean NMB (USD/ha per decision unit)",
title = "(A) Mean NMB and 95% CI") +
theme_minimal()
pB <- ggplot(res, aes(pt, Pr_pos)) +
geom_line(size = 1) +
geom_hline(yintercept = 0.5, linetype = 2) +
geom_hline(yintercept = 0.8, linetype = 3) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(0,1)) +
labs(x = "Risk threshold (p_t)", y = "Probability of NMB > 0",
title = "(B) Cost-effectiveness acceptability curve (Pr[NMB>0])") +
theme_minimal()
pC <- ggplot(res, aes(pt, Pr_ge_1saca)) +
geom_line(size = 1) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(0,1)) +
labs(x = "Risk threshold (p_t)", y = "Probability of NMB ≥ 1 sack (60 kg)",
title = "(C) Minimum gain target (≥ 1 60kg bag)") +
theme_minimal()
pD1 <- ggplot(res, aes(pt, NMB_trat_mean)) +
geom_line(size = 1) +
geom_hline(yintercept = 0, linetype = 2) +
labs(x = "Risk threshold (p_t)", y = "NMB per treated unit (USD/ha)",
title = "(D1) NMB per treated unit = PPV·B − C") +
theme_minimal()
pD2 <- ggplot(res, aes(pt, PPV)) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = PPV_req_lo, ymax = PPV_req_hi), alpha = 0.15, fill = "grey70") +
geom_line(aes(y = PPV_req_med), linetype = 2) +
scale_y_continuous(limits = c(0,1), labels = scales::percent) +
labs(x = "Risk threshold (p_t)", y = "PPV (observed) vs PPV* (C/B)",
title = "(D2) Required PPV (10–90% range) and observed") +
theme_minimal()
(pA | pB) /  (pD1 | pD2)
(pA | pB) /  (pD1 | pD2)
res <- read.csv("plan/res.csv")
pA <- ggplot(res, aes(pt, NMB_mean)) +
geom_ribbon(aes(ymin = NMB_lo, ymax = NMB_hi), alpha = 0.15, fill = "#4970b5") +
geom_line(size = 1.5, color = "#ED7D31") +
geom_hline(yintercept = 0, linetype = 2, color = "gray60") +
labs(x = expression("Risk threshold (" * italic(p)[italic(t)] * ")"),
y = expression("Mean NMB (USD/ha per decision unit)")) +
theme_bw()+
theme(
axis.title.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
)+
scale_y_continuous(breaks = breaks_width(10.0))
pB <- ggplot(res, aes(pt, Pr_trat_pos)) +
annotate("rect", ymin = 0.5, ymax = 0.8, xmin = -Inf, xmax = Inf,
fill = "#4970b5", alpha = 0.2)+
geom_line(size = 1.5, , color = "#ED7D31") +
geom_hline(yintercept = 0.5, linetype = 2, color = "gray60") +
geom_hline(yintercept = 0.8, linetype = 2, color = "gray60") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(0,1)) +
labs(x = expression("Risk threshold (" * italic(p)[italic(t)] * ")"),
y = "Probability of NMB > 0") +
theme_bw()+
theme(
axis.title.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
)
pD1 <- ggplot(res, aes(pt, NMB_trat_mean)) +
geom_ribbon(aes(ymin = NMB_trat_lo, ymax = NMB_trat_hi), alpha = 0.15, fill = "#4970b5") +
geom_line(size = 1.5, color = "#ED7D31") +
geom_hline(yintercept = 0, linetype = 2, color = "gray60") +
labs(x = expression("Risk threshold (" * italic(p)[italic(t)] * ")"),
y = "NMB per treated unit (USD/ha)") +
theme_bw()+
theme(
axis.title.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
)
pD2 <- ggplot(res, aes(pt, PPV)) +
geom_ribbon(aes(ymin = PPV_req_lo, ymax = PPV_req_hi), alpha = 0.15, fill = "#4970b5") +
geom_line(size = 1.5, color = "#ED7D31") +
geom_line(aes(y = PPV_req_med), linetype = 2, color = "gray60") +
scale_y_continuous(limits = c(0,1), labels = scales::percent) +
labs(x = expression("Risk threshold (" * italic(p)[italic(t)] * ")"),
y = "Observed PPV vs. required PPV (C/B)") +
theme_bw()+
theme(
axis.title.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
)
(pD1 | pB)/
(pA | pD2)+
plot_annotation(tag_levels = "A")
#ggsave("imagem_NMB.png", dpi = 600, bg = "white", width = 10.5, height = 9)
(pD1 | pB)/
(pA | pD2)+
plot_annotation(tag_levels = "A")
# Probabilistic Sensitivity Analysis (PSA)
# Compute population-level and per-treated-unit NMB for each threshold
compute_psa <- function(y, p_hat, ths, slope_kg, P, rE, rC, S = 10000){
N <- length(y)
map_dfr(ths, function(pt){
pred <- p_hat >= pt
TP   <- sum(pred & y == 1)
Tt   <- sum(pred)
PPV  <- if (Tt > 0) TP / Tt else 0
# Sampling of efficacy, cost, and severity points
E      <- rE(S)
C      <- rC(S)
P      <- rP(S)       # wheat price in USD/kg
P_saca <- P * 60
s_pts  <- draw_s_pts(pt, S)
# Benefit per epidemic (USD/ha)
B <- (d_pct / 100) * E * s_pts * Y0_kg_ha * P
# NMB per population unit and per treated unit
NMB_pop  <- (TP / N) * B - (Tt / N) * C
NMB_trat <- PPV * B - C
req_PPV <- pmin(C / pmax(B, 1e-9), 1)
tibble(
pt,
NMB_mean      = mean(NMB_pop),
NMB_lo        = unname(quantile(NMB_pop, 0.025)),
NMB_hi        = unname(quantile(NMB_pop, 0.975)),
Pr_pos        = mean(NMB_pop > 0),
Pr_ge_1saca   = mean(NMB_pop >= P_saca),
NMB_trat_mean = mean(NMB_trat),
NMB_trat_lo = unname(quantile(NMB_trat, 0.025)),
NMB_trat_hi = unname(quantile(NMB_trat, 0.975)),
Pr_trat_pos   = mean(NMB_trat > 0),
PPV           = PPV,
PPV_req_med   = median(req_PPV),
PPV_req_lo    = quantile(req_PPV, 0.10),
PPV_req_hi    = quantile(req_PPV, 0.90)
)
})
}
# Run PSA and save results
res <- compute_psa(y, p_hat, ths, slope_kg, P_usd_per_kg, rE, rC, S)
write_csv(res, "plan/res.csv")
res <- read.csv("plan/res.csv")
pA <- ggplot(res, aes(pt, NMB_mean)) +
geom_ribbon(aes(ymin = NMB_lo, ymax = NMB_hi), alpha = 0.15, fill = "#4970b5") +
geom_line(size = 1.5, color = "#ED7D31") +
geom_hline(yintercept = 0, linetype = 2, color = "gray60") +
labs(x = expression("Risk threshold (" * italic(p)[italic(t)] * ")"),
y = expression("Mean NMB (USD/ha per decision unit)")) +
theme_bw()+
theme(
axis.title.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
)+
scale_y_continuous(breaks = breaks_width(10.0))
pB <- ggplot(res, aes(pt, Pr_trat_pos)) +
annotate("rect", ymin = 0.5, ymax = 0.8, xmin = -Inf, xmax = Inf,
fill = "#4970b5", alpha = 0.2)+
geom_line(size = 1.5, , color = "#ED7D31") +
geom_hline(yintercept = 0.5, linetype = 2, color = "gray60") +
geom_hline(yintercept = 0.8, linetype = 2, color = "gray60") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1), limits = c(0,1)) +
labs(x = expression("Risk threshold (" * italic(p)[italic(t)] * ")"),
y = "Probability of NMB > 0") +
theme_bw()+
theme(
axis.title.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
)
pD1 <- ggplot(res, aes(pt, NMB_trat_mean)) +
geom_ribbon(aes(ymin = NMB_trat_lo, ymax = NMB_trat_hi), alpha = 0.15, fill = "#4970b5") +
geom_line(size = 1.5, color = "#ED7D31") +
geom_hline(yintercept = 0, linetype = 2, color = "gray60") +
labs(x = expression("Risk threshold (" * italic(p)[italic(t)] * ")"),
y = "NMB per treated unit (USD/ha)") +
theme_bw()+
theme(
axis.title.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
)
pD2 <- ggplot(res, aes(pt, PPV)) +
geom_ribbon(aes(ymin = PPV_req_lo, ymax = PPV_req_hi), alpha = 0.15, fill = "#4970b5") +
geom_line(size = 1.5, color = "#ED7D31") +
geom_line(aes(y = PPV_req_med), linetype = 2, color = "gray60") +
scale_y_continuous(limits = c(0,1), labels = scales::percent) +
labs(x = expression("Risk threshold (" * italic(p)[italic(t)] * ")"),
y = "Observed PPV vs. required PPV (C/B)") +
theme_bw()+
theme(
axis.title.y = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
)
(pD1 | pB)/
(pA | pD2)+
plot_annotation(tag_levels = "A")
