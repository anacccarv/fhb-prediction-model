{"title":"Anthesis Date Estimation from Climate Data","markdown":{"yaml":{"title":"","message":false,"warning":false},"headingText":"Anthesis Date Estimation from Climate Data","containsRefs":false,"markdown":"\n\n\n## Libraries\n\nLoad required libraries\n\n```{r}\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(gsheet)\nlibrary(raster)\nlibrary(ncdf4)\nlibrary(lubridate)\nlibrary(readxl)\nlibrary(writexl)\nlibrary(caret)\nlibrary(tidyr)\nlibrary(r4pde)\nlibrary(refund)\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(nasapower)\n\n```\n\n## Importing and Processing the Experimental Data\n\n```{r}\n#  Import trial dataset containing municipalities, planting dates, and coordinates\ngib <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1MBiKsosQ8Hob6LkS65_1pPU25hx1CO9i42Sm_xf28ww/edit?gid=2128367221 gid=2128367221\")\n\ntrials <- gib |> \n  mutate(\n    planting_date = as.Date(planting_date, format = \"%Y-%m-%d\"),\n    pd120 = as.Date(planting_date + 120),   #   120-day growing period\n    study = as.factor(study),\n    year = as.factor(year)) |> \n  dplyr::select(study, planting_date, lon, lat, pd120) |>\n  rename(longitude = lon,\n         latitude = lat)\n```\n\n## Weather Data Acquisition\n\n### From NASA POWER\n\n```{r}\n\nweather_nasa <- trials %>%\n  rowwise() %>%\n  mutate(\n    weather = list(\n      get_power(\n        community = \"AG\", \n        lonlat = c(longitude, latitude),\n        pars = c(\"T2M\", \"T2M_MAX\", \"T2M_MIN\", \"RH2M\", \"PRECTOTCORR\"),\n        dates = c(as.character(planting_date), as.character(pd120)),\n        temporal_api = \"DAILY\"\n      )\n    )\n  ) %>%\n  unnest(weather) |> \n  rename(Tmax = T2M_MAX,\n         Tmin = T2M_MIN,\n         date = YYYYMMDD)\n\n```\n\n### From Xavier Dataset (NetCDF)\n\nThis repository is intended to demonstrate the structure and workflow of the code used in the project. To keep the repository lightweight and accessible on GitHub, the original input data files (provided by Xavier et al. 2022) have been excluded because they exceed GitHub's file size limits.\n\nThe corresponding lines in the code that load these large .nc files are commented out (using ). This way, the code can still be inspected and followed without requiring the full dataset. However, the scripts will not reproduce the complete analysis unless the data are available locally.\n\nThe full dataset can be obtained from Xavier et al. (2022) at the following link: [Xavier Dataset â€“ Download here](https://sites.google.com/site/alexandrecandidoxavierufes/brazilian-daily-weather-gridded-data)\n\nAfter downloading, place the files in the `data/` directory of this repository and uncomment the relevant lines in the scripts to run the full analysis.\n\n```{r}\n#  Keep only studies with available NetCDF coverage\ntrials <- trials |> \n  filter(study %in% 1:91)\n```\n\n```{r}\n#   #     Generic function to extract daily climate variables from NetCDF\n# extract_nc_var <- function(netcdf_path, trials, varname, outfile) {\n#   nc_data <- nc_open(netcdf_path)\n  \n#   #     Convert time variable to Date\n#   time_var   <- ncvar_get(nc_data, \"time\")\n#   time_units <- ncatt_get(nc_data, \"time\", \"units\")$value\n#   origin_date <- as.POSIXct(sub(\"hours since \", \"\", time_units), tz = \"UTC\")\n#   nc_dates   <- as.Date(origin_date + as.difftime(time_var, units = \"hours\"))\n  \n#     Grid coordinates\n#   lon_vals <- ncvar_get(nc_data, \"longitude\")\n#   lat_vals <- ncvar_get(nc_data, \"latitude\")\n  \n#     Internal extractor for each trial\n#   get_data_for_row <- function(row) {\n#     date_seq <- seq.Date(row$planting_date, row$pd120, by = \"day\")\n#     date_idx <- match(date_seq, nc_dates)\n#     date_idx <- date_idx[!is.na(date_idx)]\n#     if (length(date_idx) == 0) return(NULL)\n    \n#     lon_idx <- which.min(abs(lon_vals - row$longitude))\n#     lat_idx <- which.min(abs(lat_vals - row$latitude))\n    \n#     values <- sapply(date_idx, function(i) {\n#       ncvar_get(nc_data, varname, start = c(lon_idx, lat_idx, i), count = c(1, 1, 1))\n#     })\n#     if (length(values) == 0 || all(is.na(values))) return(NULL)\n    \n#     df <- data.frame(\n#       date          = date_seq[!is.na(match(date_seq, nc_dates))],\n#       value         = values,\n#       study         = row$study,\n#       year          = format(row$planting_date, \"%Y\"),\n#       planting_date = row$planting_date\n#     )\n#     names(df)[2] <- varname\n#     return(df)\n#   }\n  \n#   result <- trials %>%\n#     split(1:nrow(.)) %>%\n#     map_dfr(get_data_for_row)\n  \n#   write_xlsx(result, outfile)\n#   nc_close(nc_data)\n#   return(result)\n# }\n\n#      # Extract Tmax and Tmin\n# tmax <- extract_nc_var(\"data/Tmax_20010101_20240320_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", trials, \"Tmax\", \"data/br_dwgd_tmax.xlsx\")\n# tmin <- extract_nc_var(\"data/Tmin_20010101_20240320_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", trials, \"Tmin\", \"data/br_dwgd_tmin.xlsx\")\n\n#   # Merge and compute mean daily temperature\n#weather_xavier <- tmax |> \n#  mutate(Tmin = tmin$Tmin, T2M = (Tmax + Tmin)/2)\n\n#write_xlsx(weather_xavier, \"plan/weather_xavier_flowering.xlsx\")\nweather_xavier <- read_xlsx(\"plan/weather_xavier_flowering.xlsx\")\n```\n\n## Estimation of Anthesis (Flowering Date)\n\n### General Functions\n\n```{r}\n#  Temperature limits for wheat growth\nTmin <- 0     #Lower limit\nTmax <- 40    #Upper limit\n\n#  Daily growing degree-days (GDD) calculation\ncalculate_gdd_phase <- function(T2M, Tmin, Tmax, Tbase) {\n  if (T2M < Tmin || T2M > Tmax) return(0)\n  GDD <- T2M - Tbase\n  return(ifelse(GDD > 0, GDD, 0))\n}\n\n#  Basal temperatures and cumulative thresholds (by growth stage)\nTbase <- c(2.1, 4.76, 0.86, 8.44)     #Sm-Em, Em-DA, DA-ET, ET-AN\nthresholds <- c(80, 100, 300, 750)    #Accumulated GDD thresholds\n\n#  Function to assign phenological phases by study\ncalculate_phases_by_study <- function(df) {\n  total_gdd <- 0\n  phase_num <- 1\n  gd_values <- numeric(nrow(df))\n  gdcumul_values <- numeric(nrow(df))\n  phases <- character(nrow(df))\n  \n  for (day in 1:nrow(df)) {\n    T2M <- df$T2M[day]\n    GDD <- calculate_gdd_phase(T2M, Tmin, Tmax, Tbase[phase_num])\n    total_gdd <- total_gdd + GDD\n    gd_values[day] <- GDD\n    gdcumul_values[day] <- total_gdd\n    \n    if (is.na(total_gdd)) {\n      phases[day] <- NA\n    } else if (total_gdd < thresholds[1]) {\n      phases[day] <- \"Planting\"\n    } else if (total_gdd < thresholds[2]) {\n      phases[day] <- \"Emergence\"\n    } else if (total_gdd < thresholds[3]) {\n      phases[day] <- \"Double Ridge\"\n    } else if (total_gdd < thresholds[4]) {\n      phases[day] <- \"Terminal Spikelet\"\n    } else {\n      phases[day] <- \"Anthesis\"\n    }\n    \n    if (phase_num <= length(thresholds) && total_gdd >= thresholds[phase_num]) {\n      phase_num <- phase_num + 1\n    }\n  }\n  \n  df <- df %>%\n    mutate(gd = gd_values, gdcumul = gdcumul_values, phase = phases)\n  return(df)\n}\n\n#  Function to compute anthesis date per dataset\ncompute_anthesis <- function(weather_data) {\n  weather_data %>%\n    group_by(study) %>%\n    group_modify(~ calculate_phases_by_study(.x)) %>%\n    ungroup() %>%\n    group_by(study) %>%\n    mutate(flowering = as.Date(date[phase == \"Anthesis\"][1]),\n           dias_para_antese = as.numeric(flowering - planting_date)) %>%\n    distinct(study, dias_para_antese, .keep_all = TRUE) %>%\n    dplyr::select(study, dias_para_antese)\n}\n\n```\n\n### Apply to NASA and Xavier Datasets\n\n```{r}\nnasa   <- compute_anthesis(weather_nasa)\nxavier <- compute_anthesis(weather_xavier)\n\n```\n\n## Final Note on Flowering Date\n\nFor subsequent analyses, the flowering date was defined as the mean number of days to anthesis across the NASA POWER and Xavier datasets, when both were available. For studies where only NASA POWER data existed, flowering was estimated exclusively from that source. The anthesis date was calculated as:\n\nPlanting date + estimated days to anthesis.\n","srcMarkdownNoYaml":"\n\n# Anthesis Date Estimation from Climate Data\n\n## Libraries\n\nLoad required libraries\n\n```{r}\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(gsheet)\nlibrary(raster)\nlibrary(ncdf4)\nlibrary(lubridate)\nlibrary(readxl)\nlibrary(writexl)\nlibrary(caret)\nlibrary(tidyr)\nlibrary(r4pde)\nlibrary(refund)\nlibrary(ggplot2)\nlibrary(readr)\nlibrary(nasapower)\n\n```\n\n## Importing and Processing the Experimental Data\n\n```{r}\n#  Import trial dataset containing municipalities, planting dates, and coordinates\ngib <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1MBiKsosQ8Hob6LkS65_1pPU25hx1CO9i42Sm_xf28ww/edit?gid=2128367221 gid=2128367221\")\n\ntrials <- gib |> \n  mutate(\n    planting_date = as.Date(planting_date, format = \"%Y-%m-%d\"),\n    pd120 = as.Date(planting_date + 120),   #   120-day growing period\n    study = as.factor(study),\n    year = as.factor(year)) |> \n  dplyr::select(study, planting_date, lon, lat, pd120) |>\n  rename(longitude = lon,\n         latitude = lat)\n```\n\n## Weather Data Acquisition\n\n### From NASA POWER\n\n```{r}\n\nweather_nasa <- trials %>%\n  rowwise() %>%\n  mutate(\n    weather = list(\n      get_power(\n        community = \"AG\", \n        lonlat = c(longitude, latitude),\n        pars = c(\"T2M\", \"T2M_MAX\", \"T2M_MIN\", \"RH2M\", \"PRECTOTCORR\"),\n        dates = c(as.character(planting_date), as.character(pd120)),\n        temporal_api = \"DAILY\"\n      )\n    )\n  ) %>%\n  unnest(weather) |> \n  rename(Tmax = T2M_MAX,\n         Tmin = T2M_MIN,\n         date = YYYYMMDD)\n\n```\n\n### From Xavier Dataset (NetCDF)\n\nThis repository is intended to demonstrate the structure and workflow of the code used in the project. To keep the repository lightweight and accessible on GitHub, the original input data files (provided by Xavier et al. 2022) have been excluded because they exceed GitHub's file size limits.\n\nThe corresponding lines in the code that load these large .nc files are commented out (using ). This way, the code can still be inspected and followed without requiring the full dataset. However, the scripts will not reproduce the complete analysis unless the data are available locally.\n\nThe full dataset can be obtained from Xavier et al. (2022) at the following link: [Xavier Dataset â€“ Download here](https://sites.google.com/site/alexandrecandidoxavierufes/brazilian-daily-weather-gridded-data)\n\nAfter downloading, place the files in the `data/` directory of this repository and uncomment the relevant lines in the scripts to run the full analysis.\n\n```{r}\n#  Keep only studies with available NetCDF coverage\ntrials <- trials |> \n  filter(study %in% 1:91)\n```\n\n```{r}\n#   #     Generic function to extract daily climate variables from NetCDF\n# extract_nc_var <- function(netcdf_path, trials, varname, outfile) {\n#   nc_data <- nc_open(netcdf_path)\n  \n#   #     Convert time variable to Date\n#   time_var   <- ncvar_get(nc_data, \"time\")\n#   time_units <- ncatt_get(nc_data, \"time\", \"units\")$value\n#   origin_date <- as.POSIXct(sub(\"hours since \", \"\", time_units), tz = \"UTC\")\n#   nc_dates   <- as.Date(origin_date + as.difftime(time_var, units = \"hours\"))\n  \n#     Grid coordinates\n#   lon_vals <- ncvar_get(nc_data, \"longitude\")\n#   lat_vals <- ncvar_get(nc_data, \"latitude\")\n  \n#     Internal extractor for each trial\n#   get_data_for_row <- function(row) {\n#     date_seq <- seq.Date(row$planting_date, row$pd120, by = \"day\")\n#     date_idx <- match(date_seq, nc_dates)\n#     date_idx <- date_idx[!is.na(date_idx)]\n#     if (length(date_idx) == 0) return(NULL)\n    \n#     lon_idx <- which.min(abs(lon_vals - row$longitude))\n#     lat_idx <- which.min(abs(lat_vals - row$latitude))\n    \n#     values <- sapply(date_idx, function(i) {\n#       ncvar_get(nc_data, varname, start = c(lon_idx, lat_idx, i), count = c(1, 1, 1))\n#     })\n#     if (length(values) == 0 || all(is.na(values))) return(NULL)\n    \n#     df <- data.frame(\n#       date          = date_seq[!is.na(match(date_seq, nc_dates))],\n#       value         = values,\n#       study         = row$study,\n#       year          = format(row$planting_date, \"%Y\"),\n#       planting_date = row$planting_date\n#     )\n#     names(df)[2] <- varname\n#     return(df)\n#   }\n  \n#   result <- trials %>%\n#     split(1:nrow(.)) %>%\n#     map_dfr(get_data_for_row)\n  \n#   write_xlsx(result, outfile)\n#   nc_close(nc_data)\n#   return(result)\n# }\n\n#      # Extract Tmax and Tmin\n# tmax <- extract_nc_var(\"data/Tmax_20010101_20240320_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", trials, \"Tmax\", \"data/br_dwgd_tmax.xlsx\")\n# tmin <- extract_nc_var(\"data/Tmin_20010101_20240320_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", trials, \"Tmin\", \"data/br_dwgd_tmin.xlsx\")\n\n#   # Merge and compute mean daily temperature\n#weather_xavier <- tmax |> \n#  mutate(Tmin = tmin$Tmin, T2M = (Tmax + Tmin)/2)\n\n#write_xlsx(weather_xavier, \"plan/weather_xavier_flowering.xlsx\")\nweather_xavier <- read_xlsx(\"plan/weather_xavier_flowering.xlsx\")\n```\n\n## Estimation of Anthesis (Flowering Date)\n\n### General Functions\n\n```{r}\n#  Temperature limits for wheat growth\nTmin <- 0     #Lower limit\nTmax <- 40    #Upper limit\n\n#  Daily growing degree-days (GDD) calculation\ncalculate_gdd_phase <- function(T2M, Tmin, Tmax, Tbase) {\n  if (T2M < Tmin || T2M > Tmax) return(0)\n  GDD <- T2M - Tbase\n  return(ifelse(GDD > 0, GDD, 0))\n}\n\n#  Basal temperatures and cumulative thresholds (by growth stage)\nTbase <- c(2.1, 4.76, 0.86, 8.44)     #Sm-Em, Em-DA, DA-ET, ET-AN\nthresholds <- c(80, 100, 300, 750)    #Accumulated GDD thresholds\n\n#  Function to assign phenological phases by study\ncalculate_phases_by_study <- function(df) {\n  total_gdd <- 0\n  phase_num <- 1\n  gd_values <- numeric(nrow(df))\n  gdcumul_values <- numeric(nrow(df))\n  phases <- character(nrow(df))\n  \n  for (day in 1:nrow(df)) {\n    T2M <- df$T2M[day]\n    GDD <- calculate_gdd_phase(T2M, Tmin, Tmax, Tbase[phase_num])\n    total_gdd <- total_gdd + GDD\n    gd_values[day] <- GDD\n    gdcumul_values[day] <- total_gdd\n    \n    if (is.na(total_gdd)) {\n      phases[day] <- NA\n    } else if (total_gdd < thresholds[1]) {\n      phases[day] <- \"Planting\"\n    } else if (total_gdd < thresholds[2]) {\n      phases[day] <- \"Emergence\"\n    } else if (total_gdd < thresholds[3]) {\n      phases[day] <- \"Double Ridge\"\n    } else if (total_gdd < thresholds[4]) {\n      phases[day] <- \"Terminal Spikelet\"\n    } else {\n      phases[day] <- \"Anthesis\"\n    }\n    \n    if (phase_num <= length(thresholds) && total_gdd >= thresholds[phase_num]) {\n      phase_num <- phase_num + 1\n    }\n  }\n  \n  df <- df %>%\n    mutate(gd = gd_values, gdcumul = gdcumul_values, phase = phases)\n  return(df)\n}\n\n#  Function to compute anthesis date per dataset\ncompute_anthesis <- function(weather_data) {\n  weather_data %>%\n    group_by(study) %>%\n    group_modify(~ calculate_phases_by_study(.x)) %>%\n    ungroup() %>%\n    group_by(study) %>%\n    mutate(flowering = as.Date(date[phase == \"Anthesis\"][1]),\n           dias_para_antese = as.numeric(flowering - planting_date)) %>%\n    distinct(study, dias_para_antese, .keep_all = TRUE) %>%\n    dplyr::select(study, dias_para_antese)\n}\n\n```\n\n### Apply to NASA and Xavier Datasets\n\n```{r}\nnasa   <- compute_anthesis(weather_nasa)\nxavier <- compute_anthesis(weather_xavier)\n\n```\n\n## Final Note on Flowering Date\n\nFor subsequent analyses, the flowering date was defined as the mean number of days to anthesis across the NASA POWER and Xavier datasets, when both were available. For studies where only NASA POWER data existed, flowering was estimated exclusively from that source. The anthesis date was calculated as:\n\nPlanting date + estimated days to anthesis.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"about.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.32","editor":"visual","theme":["cosmo","brand"],"title":"","message":false},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}