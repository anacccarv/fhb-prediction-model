{"title":"Weather Data","markdown":{"yaml":{"title":"Weather Data","message":false,"warning":false},"headingText":"Weather Data Script","containsRefs":false,"markdown":"\n\n\nThis repository is intended to demonstrate the **structure and workflow of the code** used in the project.\\\nTo keep the repository lightweight and accessible on GitHub, the original input data files (provided by Xavier et al. 2022) have been **excluded** because they exceed GitHub's file size limits.\n\nThe corresponding lines in the code that load these large `.nc` files are commented out (using `#`). This way, the code can still be inspected and followed without requiring the full dataset. However, the scripts will not reproduce the complete analysis unless the data are available locally.\n\n# Libraries\n\nLoad Required Libraries\n\n```{r}\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(gsheet)\nlibrary(raster)\nlibrary(ncdf4)\nlibrary(lubridate)\nlibrary(readxl)\nlibrary(writexl)\nlibrary(caret)\nlibrary(tidyr)\nlibrary(r4pde)\nlibrary(refund)\nlibrary(ggplot2)\nlibrary(readr)\n```\n\n# Experimental Metadata\n\nLoad Experimental Metadata\n\n```{r}\n# Load trial metadata from Google Sheets\ngib <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1MBiKsosQ8Hob6LkS65_1pPU25hx1CO9i42Sm_xf28ww/edit?gid=0#gid=0\")\n```\n\nLoad experimental metadata and convert dates to Date format. Create a 57-day window (±28 days) around flowering for extracting climate data.\n\n```{r}\n# Convert dates and ensure study is a factor\ngib2 <- gib |> \n  mutate(\n    planting_date = as.Date(planting_date, format = \"%Y-%m-%d\"),\n    flowering = as.Date(flowering, format = \"%Y-%m-%d\"),\n    study = as.factor(study)\n  )\n\n# Define ±28-day window around flowering for climate data\ngib3 <- gib2 |>  mutate(pd28 = flowering + 28,\n                        pd00 = flowering - 28,\n                        year = as.numeric(year))\n\n```\n\n# Climate Data Extraction from NetCDF (Xavier)\n\nThe full dataset can be obtained from Xavier et al. (2022) at the following link: [Xavier Dataset – Download here](https://sites.google.com/site/alexandrecandidoxavierufes/brazilian-daily-weather-gridded-data)\n\nAfter downloading, place the files in the `data/` directory of this repository and uncomment the relevant lines in the scripts to run the full analysis.\n\nFunction to extract climate data from NetCDF files:\n\n```{r}\n## Function to extract daily climate variables from NetCDF for specified trials\n\n#extract_nc_var <- function(netcdf_path, gib, varname, outfile) {\n#  # Open NetCDF file\n#  nc_data <- nc_open(netcdf_path)\n#  \n#  # Convert NetCDF time to Date\n#  time_var   <- ncvar_get(nc_data, \"time\")\n#  time_units <- ncatt_get(nc_data, \"time\", \"units\")$value\n#  origin_date <- as.POSIXct(sub(\"hours since \", \"\", time_units), tz = \"UTC\")\n#  nc_dates   <- as.Date(origin_date + as.difftime(time_var, units = \"hours\"))\n  \n#  # Extract grid coordinates\n#  lon_vals <- ncvar_get(nc_data, \"longitude\")\n#  lat_vals <- ncvar_get(nc_data, \"latitude\")\n#  \n#  # Internal function to extract data for each row of 'gib'\n#  get_data_for_row <- function(row, line_number) {\n#    start_date <- row$pd00\n#    end_date   <- row$pd28\n#    date_seq   <- seq.Date(start_date, end_date, by = \"day\")\n#    date_idx   <- match(date_seq, nc_dates)\n#    date_idx   <- date_idx[!is.na(date_idx)]\n    \n#    if (length(date_idx) == 0) return(NULL)\n    \n#    # Find closest grid point\n#    lon_idx <- which.min(abs(lon_vals - row$lon))\n#    lat_idx <- which.min(abs(lat_vals - row$lat))\n    \n#    # Extract values\n#    values <- sapply(date_idx, function(i) {\n#      ncvar_get(nc_data, varname,\n#                start = c(lon_idx, lat_idx, i),\n#                count = c(1, 1, 1))\n#    })\n    \n#    if (length(values) == 0 || all(is.na(values))) return(NULL)\n    \n#    # Build dataframe\n#    df <- data.frame(\n#      date          = date_seq[!is.na(match(date_seq, nc_dates))],\n#      value         = values,\n#      study         = row$study,\n#      location      = row$location,\n#      state         = row$state,\n#      year          = format(start_date, \"%Y\"),\n#      planting_date = row$planting_date\n#    )\n    \n#    names(df)[2] <- varname\n#    return(df)\n#  }\n  \n#  # Apply function for each row of 'gib'\n#  result <- gib %>%\n#    split(1:nrow(.)) %>%\n#    map2_dfr(1:nrow(gib), ~ get_data_for_row(.x, .y), .id = \"id\")\n  \n#  # Save as Excel\n#  write_xlsx(result, outfile)\n  \n#  # Close NetCDF\n#  nc_close(nc_data)\n#  return(result)\n#}\n\n```\n\nThis function extracts a specific climate variable (e.g., precipitation, Tmax, Tmin, RH) from a NetCDF file for each trial, using the nearest grid point to the trial location. Results are saved as Excel.\n\nNow, extract climate variables from Xavier dataset for old and new periods:\n\n```{r}\n#   # Extracting Climate Variables\n\n#   # Precipitation\n#prec_old <- extract_nc_var(\"data/pr_19810101_20001231_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", gib3, \"pr\", \"data/br_dwgd_prec_old.xlsx\")\n\n#prec_new <- extract_nc_var(\"data/pr_20010101_20240320_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", gib3, \"pr\", \"data/br_dwgd_prec.xlsx\")\n\n#   # Tmax\n#tmax_old <- extract_nc_var(\"data/Tmax_19810101_20001231_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", gib3, \"Tmax\", \"data/br_dwgd_tmax_old.xlsx\")\n\n#tmax_new <- extract_nc_var(\"data/Tmax_20010101_20240320_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", gib3, \"Tmax\", \"data/br_dwgd_tmax.xlsx\")\n\n#   # Tmin\n#tmin_old <- extract_nc_var(\"data/Tmin_19810101_20001231_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", gib3, \"Tmin\", \"data/br_dwgd_tmin_old.xlsx\")\n\n#tmin_new <- extract_nc_var(\"data/Tmin_20010101_20240320_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", gib3, \"Tmin\", \"data/br_dwgd_tmin.xlsx\")\n\n#   # Relative humidity\n#rh_old <- extract_nc_var(\"data/RH_19810101_20001231_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", gib3, \"RH\", \"data/br_dwgd_rh_old.xlsx\")\n\n#rh_new <- extract_nc_var(\"data/RH_20010101_20240320_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", gib3, \"RH\", \"data/br_dwgd_rh.xlsx\")\n```\n\n## Combine Xavier Climate Data\n\nTo facilitate the joining process, precipitation, temperature (max and min), and relative humidity (RH) data from both old and new sources were combined externally into \"final\" Excel files. These files are then read into R.\n\n```{r}\n# Read final climate datasets\n\nprec <- read_xlsx(\"plan/br_dwgd_prec_final.xlsx\")\ntmax <- read_xlsx(\"plan/br_dwgd_tmax_final.xlsx\")\ntmin <- read_xlsx(\"plan/br_dwgd_tmin _final.xlsx\")\nrh   <- read_xlsx(\"plan/br_dwgd_rh_final.xlsx\")\n\n# Combine into a single dataframe\nweather_data <- prec |> \n  mutate(\n    RH2M        = rh$rh,\n    T2M_MAX     = tmax$tmax,\n    T2M_MIN     = tmin$tmin,\n    PRECTOTCORR = prec$precipitation\n  ) |> \n  dplyr::select(-study) |> \n  rename(study = id) |> \n  mutate(\n    date = as.Date(date),\n    study = as.factor(study),\n    planting_date = as.Date(planting_date)\n  )\n\n# Join with trial metadata\nweather_data2 <- left_join(weather_data, gib3, by = \"study\") |> \n  dplyr::select(\n    study, date, location.x, state.x, year.x, lat, lon, planting_date.x, index, flowering, RH2M, T2M_MIN, T2M_MAX, PRECTOTCORR\n  )|> \n  rename(location = location.x,\n         state = state.x,\n         year = year.x,,\n         planting_date =  planting_date.x)|> \n  mutate(\n    T2M = (T2M_MAX + T2M_MIN) / 2,                 \n    DIFF_TMAX_TMIN = T2M_MAX - T2M_MIN,             \n    year = as.numeric(year))\n\n\nwrite_xlsx(weather_data2, \"plan/weather_data2_final.xlsx\")\n\n```\n\nCombine precipitation, temperature, and RH into a single dataframe and join with experimental metadata. Compute daily mean temperature and range.\n\n# NASA Power Supplementation (2024 Trials)\n\nSome trials from 2024 did not have climate data available in the Xavier dataset. These trials were supplemented using the NASA Power API.\n\n```{r}\n# Select trials missing Xavier climate data\ngib4 <- gib3 |> \n  filter(study %in% c(92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 126, 127, 128, 129, 130, 131, 132, 149, 150))\n\n# Prepare locations\ntrials <- gib4 |> \n  dplyr::select(study, flowering, lon, lat) |> \n  rename(\n    longitude = lon,\n    latitude = lat\n  )\n\n# Retrieve weather from NASA Power\nweather_nasa <- get_nasapower(\n  data = trials,\n  days_around = 28,\n  date_col = \"flowering\",\n  pars = c(\"GWETROOT\", \"GWETTOP\", \"T2M\", \"T2M_MAX\", \"T2M_MIN\", \"T2M_RANGE\", \"RH2M\", \"PRECTOTCORR\", \"T2MDEW\",\"WS2M\", \"PS\", \"ALLSKY_SFC_SW_DWN\", \"CLRSKY_SFC_SW_DWN\"))\n\n# Save\nwrite_xlsx(weather_nasa, \"plan/weather_nasa.xlsx\")\nwrite_csv(weather_nasa, \"plan/weather_nasa.csv\")\n\n# Combine with experimental metadata\ntrials_weather <- full_join(gib3, weather_nasa)\n\nwrite_xlsx(trials_weather, \"plan/trials_weather.xlsx\")\nwrite_csv(trials_weather, \"plan/trials_weather.csv\")\n```\n\n# Final Climate Dataset (Xavier + NASA)\n\nAgain to facilitate the joining process, data from Xavier and Nasa Power were combined externally into \"dados_clima_completo\" Excel files. These files are then read into R.\n\n```{r}\ndados_clima <- read_xlsx(\"plan/dados_clima_completo.xlsx\") |> \n  mutate(\n    date = as.Date(date),\n    flowering = as.Date(flowering)\n  )\n\n\nweather_data_final <- dados_clima |> \n  group_by(study) |> \n  # Calculate the number of days relative to flowering\n  mutate(days = as.numeric(date - flowering)) |> \n  ungroup() |> \n  # Classify epidemic vs non-epidemic trials\n  mutate(epidemic = if_else(index >= 10, 1, 0),\n         # Compute mean temperature and daily temperature range\n         T2M = (T2M_MAX + T2M_MIN)/2,\n         T2M_RANGE = T2M_MAX - T2M_MIN,\n         e_s = 0.6108 * exp((17.27 * T2M) / (T2M + 237.3)),\n         e_a = e_s * (RH2M / 100),\n         VPD = e_s - e_a)\n\n\nwrite_xlsx(weather_data_final, \"plan/weather_data_final.xlsx\")\nwrite_csv(weather_data_final, \"plan/weather_data_final.csv\")\n```\n\nCompute derived variables such as mean temperature, daily temperature range, vapor pressure (saturation and actual), and VPD for further analysis.\n\n# Additional Nasa Power weather variables\n\n```{r}\n# Prepare unique trial locations for NASA Power retrieval\n\n data1 <- weather_data_final |> \n   group_by(study) |> \n   slice(1) |> \n   dplyr::select(study, flowering, lat, lon) |> \n   rename(latitude = lat, longitude = lon)\n\n# Download additional weather variables from NASA Power\n weather_data <- r4pde::get_nasapower(\n    data = data1,\n    days_around = 28,\n     date_col = \"flowering\",\n    pars = c(\"GWETROOT\", \"GWETTOP\", \"T2M\", \"T2M_MAX\", \"T2M_MIN\", \"T2M_RANGE\", \"RH2M\", \"PRECTOTCORR\", \"T2MDEW\",\"WS2M\", \"PS\", \"ALLSKY_SFC_SW_DWN\", \"CLRSKY_SFC_SW_DWN\"))\n \n trials <- data1 |> \n   dplyr::select(study, flowering)\n \n data_nasa <- left_join(trials, weather_data)\n \n epidemic <- weather_data_final |> \n   group_by(study) |> \n   slice(1) |> \n   dplyr::select(epidemic)\n \n \n data_nasa <- data_nasa |> \n  mutate(days = as.numeric(YYYYMMDD - as.Date(flowering)),\n         study = as.factor(study)) |> \n   left_join(epidemic) |> \n   mutate(TDD = T2M_MIN - T2MDEW)\n\n # Save final NASA Power dataset\nwrite_csv(data_nasa, \"plan/weather_data_nasa.csv\")\n\n```\n","srcMarkdownNoYaml":"\n\n# Weather Data Script\n\nThis repository is intended to demonstrate the **structure and workflow of the code** used in the project.\\\nTo keep the repository lightweight and accessible on GitHub, the original input data files (provided by Xavier et al. 2022) have been **excluded** because they exceed GitHub's file size limits.\n\nThe corresponding lines in the code that load these large `.nc` files are commented out (using `#`). This way, the code can still be inspected and followed without requiring the full dataset. However, the scripts will not reproduce the complete analysis unless the data are available locally.\n\n# Libraries\n\nLoad Required Libraries\n\n```{r}\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(gsheet)\nlibrary(raster)\nlibrary(ncdf4)\nlibrary(lubridate)\nlibrary(readxl)\nlibrary(writexl)\nlibrary(caret)\nlibrary(tidyr)\nlibrary(r4pde)\nlibrary(refund)\nlibrary(ggplot2)\nlibrary(readr)\n```\n\n# Experimental Metadata\n\nLoad Experimental Metadata\n\n```{r}\n# Load trial metadata from Google Sheets\ngib <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1MBiKsosQ8Hob6LkS65_1pPU25hx1CO9i42Sm_xf28ww/edit?gid=0#gid=0\")\n```\n\nLoad experimental metadata and convert dates to Date format. Create a 57-day window (±28 days) around flowering for extracting climate data.\n\n```{r}\n# Convert dates and ensure study is a factor\ngib2 <- gib |> \n  mutate(\n    planting_date = as.Date(planting_date, format = \"%Y-%m-%d\"),\n    flowering = as.Date(flowering, format = \"%Y-%m-%d\"),\n    study = as.factor(study)\n  )\n\n# Define ±28-day window around flowering for climate data\ngib3 <- gib2 |>  mutate(pd28 = flowering + 28,\n                        pd00 = flowering - 28,\n                        year = as.numeric(year))\n\n```\n\n# Climate Data Extraction from NetCDF (Xavier)\n\nThe full dataset can be obtained from Xavier et al. (2022) at the following link: [Xavier Dataset – Download here](https://sites.google.com/site/alexandrecandidoxavierufes/brazilian-daily-weather-gridded-data)\n\nAfter downloading, place the files in the `data/` directory of this repository and uncomment the relevant lines in the scripts to run the full analysis.\n\nFunction to extract climate data from NetCDF files:\n\n```{r}\n## Function to extract daily climate variables from NetCDF for specified trials\n\n#extract_nc_var <- function(netcdf_path, gib, varname, outfile) {\n#  # Open NetCDF file\n#  nc_data <- nc_open(netcdf_path)\n#  \n#  # Convert NetCDF time to Date\n#  time_var   <- ncvar_get(nc_data, \"time\")\n#  time_units <- ncatt_get(nc_data, \"time\", \"units\")$value\n#  origin_date <- as.POSIXct(sub(\"hours since \", \"\", time_units), tz = \"UTC\")\n#  nc_dates   <- as.Date(origin_date + as.difftime(time_var, units = \"hours\"))\n  \n#  # Extract grid coordinates\n#  lon_vals <- ncvar_get(nc_data, \"longitude\")\n#  lat_vals <- ncvar_get(nc_data, \"latitude\")\n#  \n#  # Internal function to extract data for each row of 'gib'\n#  get_data_for_row <- function(row, line_number) {\n#    start_date <- row$pd00\n#    end_date   <- row$pd28\n#    date_seq   <- seq.Date(start_date, end_date, by = \"day\")\n#    date_idx   <- match(date_seq, nc_dates)\n#    date_idx   <- date_idx[!is.na(date_idx)]\n    \n#    if (length(date_idx) == 0) return(NULL)\n    \n#    # Find closest grid point\n#    lon_idx <- which.min(abs(lon_vals - row$lon))\n#    lat_idx <- which.min(abs(lat_vals - row$lat))\n    \n#    # Extract values\n#    values <- sapply(date_idx, function(i) {\n#      ncvar_get(nc_data, varname,\n#                start = c(lon_idx, lat_idx, i),\n#                count = c(1, 1, 1))\n#    })\n    \n#    if (length(values) == 0 || all(is.na(values))) return(NULL)\n    \n#    # Build dataframe\n#    df <- data.frame(\n#      date          = date_seq[!is.na(match(date_seq, nc_dates))],\n#      value         = values,\n#      study         = row$study,\n#      location      = row$location,\n#      state         = row$state,\n#      year          = format(start_date, \"%Y\"),\n#      planting_date = row$planting_date\n#    )\n    \n#    names(df)[2] <- varname\n#    return(df)\n#  }\n  \n#  # Apply function for each row of 'gib'\n#  result <- gib %>%\n#    split(1:nrow(.)) %>%\n#    map2_dfr(1:nrow(gib), ~ get_data_for_row(.x, .y), .id = \"id\")\n  \n#  # Save as Excel\n#  write_xlsx(result, outfile)\n  \n#  # Close NetCDF\n#  nc_close(nc_data)\n#  return(result)\n#}\n\n```\n\nThis function extracts a specific climate variable (e.g., precipitation, Tmax, Tmin, RH) from a NetCDF file for each trial, using the nearest grid point to the trial location. Results are saved as Excel.\n\nNow, extract climate variables from Xavier dataset for old and new periods:\n\n```{r}\n#   # Extracting Climate Variables\n\n#   # Precipitation\n#prec_old <- extract_nc_var(\"data/pr_19810101_20001231_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", gib3, \"pr\", \"data/br_dwgd_prec_old.xlsx\")\n\n#prec_new <- extract_nc_var(\"data/pr_20010101_20240320_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", gib3, \"pr\", \"data/br_dwgd_prec.xlsx\")\n\n#   # Tmax\n#tmax_old <- extract_nc_var(\"data/Tmax_19810101_20001231_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", gib3, \"Tmax\", \"data/br_dwgd_tmax_old.xlsx\")\n\n#tmax_new <- extract_nc_var(\"data/Tmax_20010101_20240320_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", gib3, \"Tmax\", \"data/br_dwgd_tmax.xlsx\")\n\n#   # Tmin\n#tmin_old <- extract_nc_var(\"data/Tmin_19810101_20001231_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", gib3, \"Tmin\", \"data/br_dwgd_tmin_old.xlsx\")\n\n#tmin_new <- extract_nc_var(\"data/Tmin_20010101_20240320_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", gib3, \"Tmin\", \"data/br_dwgd_tmin.xlsx\")\n\n#   # Relative humidity\n#rh_old <- extract_nc_var(\"data/RH_19810101_20001231_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", gib3, \"RH\", \"data/br_dwgd_rh_old.xlsx\")\n\n#rh_new <- extract_nc_var(\"data/RH_20010101_20240320_BR-DWGD_UFES_UTEXAS_v_3.2.3.nc\", gib3, \"RH\", \"data/br_dwgd_rh.xlsx\")\n```\n\n## Combine Xavier Climate Data\n\nTo facilitate the joining process, precipitation, temperature (max and min), and relative humidity (RH) data from both old and new sources were combined externally into \"final\" Excel files. These files are then read into R.\n\n```{r}\n# Read final climate datasets\n\nprec <- read_xlsx(\"plan/br_dwgd_prec_final.xlsx\")\ntmax <- read_xlsx(\"plan/br_dwgd_tmax_final.xlsx\")\ntmin <- read_xlsx(\"plan/br_dwgd_tmin _final.xlsx\")\nrh   <- read_xlsx(\"plan/br_dwgd_rh_final.xlsx\")\n\n# Combine into a single dataframe\nweather_data <- prec |> \n  mutate(\n    RH2M        = rh$rh,\n    T2M_MAX     = tmax$tmax,\n    T2M_MIN     = tmin$tmin,\n    PRECTOTCORR = prec$precipitation\n  ) |> \n  dplyr::select(-study) |> \n  rename(study = id) |> \n  mutate(\n    date = as.Date(date),\n    study = as.factor(study),\n    planting_date = as.Date(planting_date)\n  )\n\n# Join with trial metadata\nweather_data2 <- left_join(weather_data, gib3, by = \"study\") |> \n  dplyr::select(\n    study, date, location.x, state.x, year.x, lat, lon, planting_date.x, index, flowering, RH2M, T2M_MIN, T2M_MAX, PRECTOTCORR\n  )|> \n  rename(location = location.x,\n         state = state.x,\n         year = year.x,,\n         planting_date =  planting_date.x)|> \n  mutate(\n    T2M = (T2M_MAX + T2M_MIN) / 2,                 \n    DIFF_TMAX_TMIN = T2M_MAX - T2M_MIN,             \n    year = as.numeric(year))\n\n\nwrite_xlsx(weather_data2, \"plan/weather_data2_final.xlsx\")\n\n```\n\nCombine precipitation, temperature, and RH into a single dataframe and join with experimental metadata. Compute daily mean temperature and range.\n\n# NASA Power Supplementation (2024 Trials)\n\nSome trials from 2024 did not have climate data available in the Xavier dataset. These trials were supplemented using the NASA Power API.\n\n```{r}\n# Select trials missing Xavier climate data\ngib4 <- gib3 |> \n  filter(study %in% c(92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 126, 127, 128, 129, 130, 131, 132, 149, 150))\n\n# Prepare locations\ntrials <- gib4 |> \n  dplyr::select(study, flowering, lon, lat) |> \n  rename(\n    longitude = lon,\n    latitude = lat\n  )\n\n# Retrieve weather from NASA Power\nweather_nasa <- get_nasapower(\n  data = trials,\n  days_around = 28,\n  date_col = \"flowering\",\n  pars = c(\"GWETROOT\", \"GWETTOP\", \"T2M\", \"T2M_MAX\", \"T2M_MIN\", \"T2M_RANGE\", \"RH2M\", \"PRECTOTCORR\", \"T2MDEW\",\"WS2M\", \"PS\", \"ALLSKY_SFC_SW_DWN\", \"CLRSKY_SFC_SW_DWN\"))\n\n# Save\nwrite_xlsx(weather_nasa, \"plan/weather_nasa.xlsx\")\nwrite_csv(weather_nasa, \"plan/weather_nasa.csv\")\n\n# Combine with experimental metadata\ntrials_weather <- full_join(gib3, weather_nasa)\n\nwrite_xlsx(trials_weather, \"plan/trials_weather.xlsx\")\nwrite_csv(trials_weather, \"plan/trials_weather.csv\")\n```\n\n# Final Climate Dataset (Xavier + NASA)\n\nAgain to facilitate the joining process, data from Xavier and Nasa Power were combined externally into \"dados_clima_completo\" Excel files. These files are then read into R.\n\n```{r}\ndados_clima <- read_xlsx(\"plan/dados_clima_completo.xlsx\") |> \n  mutate(\n    date = as.Date(date),\n    flowering = as.Date(flowering)\n  )\n\n\nweather_data_final <- dados_clima |> \n  group_by(study) |> \n  # Calculate the number of days relative to flowering\n  mutate(days = as.numeric(date - flowering)) |> \n  ungroup() |> \n  # Classify epidemic vs non-epidemic trials\n  mutate(epidemic = if_else(index >= 10, 1, 0),\n         # Compute mean temperature and daily temperature range\n         T2M = (T2M_MAX + T2M_MIN)/2,\n         T2M_RANGE = T2M_MAX - T2M_MIN,\n         e_s = 0.6108 * exp((17.27 * T2M) / (T2M + 237.3)),\n         e_a = e_s * (RH2M / 100),\n         VPD = e_s - e_a)\n\n\nwrite_xlsx(weather_data_final, \"plan/weather_data_final.xlsx\")\nwrite_csv(weather_data_final, \"plan/weather_data_final.csv\")\n```\n\nCompute derived variables such as mean temperature, daily temperature range, vapor pressure (saturation and actual), and VPD for further analysis.\n\n# Additional Nasa Power weather variables\n\n```{r}\n# Prepare unique trial locations for NASA Power retrieval\n\n data1 <- weather_data_final |> \n   group_by(study) |> \n   slice(1) |> \n   dplyr::select(study, flowering, lat, lon) |> \n   rename(latitude = lat, longitude = lon)\n\n# Download additional weather variables from NASA Power\n weather_data <- r4pde::get_nasapower(\n    data = data1,\n    days_around = 28,\n     date_col = \"flowering\",\n    pars = c(\"GWETROOT\", \"GWETTOP\", \"T2M\", \"T2M_MAX\", \"T2M_MIN\", \"T2M_RANGE\", \"RH2M\", \"PRECTOTCORR\", \"T2MDEW\",\"WS2M\", \"PS\", \"ALLSKY_SFC_SW_DWN\", \"CLRSKY_SFC_SW_DWN\"))\n \n trials <- data1 |> \n   dplyr::select(study, flowering)\n \n data_nasa <- left_join(trials, weather_data)\n \n epidemic <- weather_data_final |> \n   group_by(study) |> \n   slice(1) |> \n   dplyr::select(epidemic)\n \n \n data_nasa <- data_nasa |> \n  mutate(days = as.numeric(YYYYMMDD - as.Date(flowering)),\n         study = as.factor(study)) |> \n   left_join(epidemic) |> \n   mutate(TDD = T2M_MIN - T2MDEW)\n\n # Save final NASA Power dataset\nwrite_csv(data_nasa, \"plan/weather_data_nasa.csv\")\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"weather_data.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.32","editor":"visual","theme":["cosmo","brand"],"title":"Weather Data","message":false},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}